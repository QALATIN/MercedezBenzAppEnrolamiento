// Generated by view binder compiler. Do not edit!
package com.latinid.mercedes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.latinid.mercedes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHuellasBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton capturaHuellas;

  @NonNull
  public final ImageView fechaAtras;

  @NonNull
  public final MaterialButton finalizar;

  @NonNull
  public final ImageView gifMercedes;

  @NonNull
  public final ImageView maniInidice;

  @NonNull
  public final ImageView manoAnular;

  @NonNull
  public final ImageView manoMedio;

  @NonNull
  public final ImageView manoMenique;

  @NonNull
  public final ImageView manoPulgar;

  @NonNull
  public final MaterialButton omitirDedo;

  @NonNull
  public final MaterialButton recapturar;

  @NonNull
  public final MaterialButton regresarDedo;

  @NonNull
  public final TextView resetSensor;

  @NonNull
  public final ImageView slotAnular;

  @NonNull
  public final ImageView slotIndice;

  @NonNull
  public final ImageView slotMedio;

  @NonNull
  public final ImageView slotMenique;

  @NonNull
  public final ImageView slotPulgar;

  @NonNull
  public final TextView textTitulo;

  @NonNull
  public final TextView textoMensaje;

  @NonNull
  public final TextView textoMensaje2;

  private FragmentHuellasBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton capturaHuellas, @NonNull ImageView fechaAtras,
      @NonNull MaterialButton finalizar, @NonNull ImageView gifMercedes,
      @NonNull ImageView maniInidice, @NonNull ImageView manoAnular, @NonNull ImageView manoMedio,
      @NonNull ImageView manoMenique, @NonNull ImageView manoPulgar,
      @NonNull MaterialButton omitirDedo, @NonNull MaterialButton recapturar,
      @NonNull MaterialButton regresarDedo, @NonNull TextView resetSensor,
      @NonNull ImageView slotAnular, @NonNull ImageView slotIndice, @NonNull ImageView slotMedio,
      @NonNull ImageView slotMenique, @NonNull ImageView slotPulgar, @NonNull TextView textTitulo,
      @NonNull TextView textoMensaje, @NonNull TextView textoMensaje2) {
    this.rootView = rootView;
    this.capturaHuellas = capturaHuellas;
    this.fechaAtras = fechaAtras;
    this.finalizar = finalizar;
    this.gifMercedes = gifMercedes;
    this.maniInidice = maniInidice;
    this.manoAnular = manoAnular;
    this.manoMedio = manoMedio;
    this.manoMenique = manoMenique;
    this.manoPulgar = manoPulgar;
    this.omitirDedo = omitirDedo;
    this.recapturar = recapturar;
    this.regresarDedo = regresarDedo;
    this.resetSensor = resetSensor;
    this.slotAnular = slotAnular;
    this.slotIndice = slotIndice;
    this.slotMedio = slotMedio;
    this.slotMenique = slotMenique;
    this.slotPulgar = slotPulgar;
    this.textTitulo = textTitulo;
    this.textoMensaje = textoMensaje;
    this.textoMensaje2 = textoMensaje2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHuellasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHuellasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_huellas, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHuellasBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.captura_huellas;
      MaterialButton capturaHuellas = ViewBindings.findChildViewById(rootView, id);
      if (capturaHuellas == null) {
        break missingId;
      }

      id = R.id.fecha_atras;
      ImageView fechaAtras = ViewBindings.findChildViewById(rootView, id);
      if (fechaAtras == null) {
        break missingId;
      }

      id = R.id.finalizar;
      MaterialButton finalizar = ViewBindings.findChildViewById(rootView, id);
      if (finalizar == null) {
        break missingId;
      }

      id = R.id.gif_mercedes;
      ImageView gifMercedes = ViewBindings.findChildViewById(rootView, id);
      if (gifMercedes == null) {
        break missingId;
      }

      id = R.id.mani_inidice;
      ImageView maniInidice = ViewBindings.findChildViewById(rootView, id);
      if (maniInidice == null) {
        break missingId;
      }

      id = R.id.mano_anular;
      ImageView manoAnular = ViewBindings.findChildViewById(rootView, id);
      if (manoAnular == null) {
        break missingId;
      }

      id = R.id.mano_medio;
      ImageView manoMedio = ViewBindings.findChildViewById(rootView, id);
      if (manoMedio == null) {
        break missingId;
      }

      id = R.id.mano_menique;
      ImageView manoMenique = ViewBindings.findChildViewById(rootView, id);
      if (manoMenique == null) {
        break missingId;
      }

      id = R.id.mano_pulgar;
      ImageView manoPulgar = ViewBindings.findChildViewById(rootView, id);
      if (manoPulgar == null) {
        break missingId;
      }

      id = R.id.omitir_dedo;
      MaterialButton omitirDedo = ViewBindings.findChildViewById(rootView, id);
      if (omitirDedo == null) {
        break missingId;
      }

      id = R.id.recapturar;
      MaterialButton recapturar = ViewBindings.findChildViewById(rootView, id);
      if (recapturar == null) {
        break missingId;
      }

      id = R.id.regresar_dedo;
      MaterialButton regresarDedo = ViewBindings.findChildViewById(rootView, id);
      if (regresarDedo == null) {
        break missingId;
      }

      id = R.id.resetSensor;
      TextView resetSensor = ViewBindings.findChildViewById(rootView, id);
      if (resetSensor == null) {
        break missingId;
      }

      id = R.id.slot_anular;
      ImageView slotAnular = ViewBindings.findChildViewById(rootView, id);
      if (slotAnular == null) {
        break missingId;
      }

      id = R.id.slot_indice;
      ImageView slotIndice = ViewBindings.findChildViewById(rootView, id);
      if (slotIndice == null) {
        break missingId;
      }

      id = R.id.slot_medio;
      ImageView slotMedio = ViewBindings.findChildViewById(rootView, id);
      if (slotMedio == null) {
        break missingId;
      }

      id = R.id.slot_menique;
      ImageView slotMenique = ViewBindings.findChildViewById(rootView, id);
      if (slotMenique == null) {
        break missingId;
      }

      id = R.id.slot_pulgar;
      ImageView slotPulgar = ViewBindings.findChildViewById(rootView, id);
      if (slotPulgar == null) {
        break missingId;
      }

      id = R.id.text_titulo;
      TextView textTitulo = ViewBindings.findChildViewById(rootView, id);
      if (textTitulo == null) {
        break missingId;
      }

      id = R.id.texto_mensaje;
      TextView textoMensaje = ViewBindings.findChildViewById(rootView, id);
      if (textoMensaje == null) {
        break missingId;
      }

      id = R.id.texto_mensaje2;
      TextView textoMensaje2 = ViewBindings.findChildViewById(rootView, id);
      if (textoMensaje2 == null) {
        break missingId;
      }

      return new FragmentHuellasBinding((ConstraintLayout) rootView, capturaHuellas, fechaAtras,
          finalizar, gifMercedes, maniInidice, manoAnular, manoMedio, manoMenique, manoPulgar,
          omitirDedo, recapturar, regresarDedo, resetSensor, slotAnular, slotIndice, slotMedio,
          slotMenique, slotPulgar, textTitulo, textoMensaje, textoMensaje2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
